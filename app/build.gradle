plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
apply from: '../constants.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.soli.exoplayertest"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        // The demo app isn't indexed, doesn't have translations, and has a
        // banner for AndroidTV that's only in xhdpi density.
        disable 'GoogleAppIndexingWarning','MissingTranslation','IconDensities'
    }

    flavorDimensions "decoderExtensions"

    productFlavors {
        noDecoderExtensions {
            dimension "decoderExtensions"
            buildConfigField "boolean", "USE_DECODER_EXTENSIONS", "false"
        }
        withDecoderExtensions {
            dimension "decoderExtensions"
            buildConfigField "boolean", "USE_DECODER_EXTENSIONS", "true"
        }
    }
}

dependencies {
//    compileOnly 'org.checkerframework:checker-qual:' + checkerframeworkVersion
//    implementation 'org.jetbrains.kotlin:kotlin-stdlib:' + kotlin_version
//    implementation 'androidx.core:core-ktx:1.3.2'
//    implementation 'androidx.appcompat:appcompat:1.2.0'
//    implementation 'com.google.android.material:material:1.2.1'
//    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
//    testImplementation 'junit:junit:4.13.1'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
//
//    implementation 'com.google.android.exoplayer:exoplayer:2.13.0'
//    implementation 'androidx.multidex:multidex:' + androidxMultidexVersion
//
////    withDecoderExtensionsImplementation project(modulePrefix + 'extension-av1')
////    withDecoderExtensionsImplementation project(modulePrefix + 'extension-ffmpeg')
////    withDecoderExtensionsImplementation project(modulePrefix + 'extension-flac')
////    withDecoderExtensionsImplementation project(modulePrefix + 'extension-opus')
////    withDecoderExtensionsImplementation project(modulePrefix + 'extension-vp9')
////    withDecoderExtensionsImplementation project(modulePrefix + 'extension-rtmp')


    compileOnly 'org.checkerframework:checker-qual:' + checkerframeworkVersion
    implementation 'androidx.annotation:annotation:' + androidxAnnotationVersion
    implementation 'androidx.appcompat:appcompat:' + androidxAppCompatVersion
    implementation 'androidx.multidex:multidex:' + androidxMultidexVersion
    implementation 'com.google.android.material:material:1.2.1'
    implementation project(modulePrefix + 'library-core')
    implementation project(modulePrefix + 'library-dash')
    implementation project(modulePrefix + 'library-hls')
    implementation project(modulePrefix + 'library-smoothstreaming')
    implementation project(modulePrefix + 'library-ui')
    implementation project(modulePrefix + 'extension-cronet')
    implementation project(modulePrefix + 'extension-ima')
    withDecoderExtensionsImplementation project(modulePrefix + 'extension-av1')
    withDecoderExtensionsImplementation project(modulePrefix + 'extension-ffmpeg')
    withDecoderExtensionsImplementation project(modulePrefix + 'extension-flac')
    withDecoderExtensionsImplementation project(modulePrefix + 'extension-opus')
    withDecoderExtensionsImplementation project(modulePrefix + 'extension-vp9')
    withDecoderExtensionsImplementation project(modulePrefix + 'extension-rtmp')
}

apply plugin: 'com.google.android.gms.strict-version-matcher-plugin'